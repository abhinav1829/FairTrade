pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub_credentials')
        DOCKERHUB_REPO_FLASK = 'shivam424/flask'
        DOCKERHUB_REPO_DJANGO = 'shivam424/django'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', 
                url: 'https://github.com/abhinav1829/FairTrade.git'
            }
        }
        
        stage('Test') {
            steps {
                sh '''#!/bin/bash -ex
                    python3 -m venv venv
                    source venv/bin/activate  
                    pip install -r requirements.txt requests
                    python3 manage.py test
                '''
            }
        }

        stage('Docker Login') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub_credentials') {
                        
                    }
                }
            }
        }

        stage('Build Django Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub_credentials') {
                        docker.build("${DOCKERHUB_REPO_DJANGO}:latest", '-f dockerFileApp .').push('latest')
                    }
                }
            }
        }

        stage('Build Flask ML Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub_credentials') {
                        docker.build("${DOCKERHUB_REPO_FLASK}:latest", '-f dockerFileRepayment .').push('latest')
                    }
                }
            }
        }

        stage('Verify Ansible Installation') {
            steps {
                sh 'ansible --version'
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                ansiblePlaybook(
                    playbook: 'deploy_docker_compose.yml',
                    inventory: 'inventory'
                )
            }
        }
    }
}
